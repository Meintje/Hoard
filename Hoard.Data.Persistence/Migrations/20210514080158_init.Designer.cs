// <auto-generated />
using System;
using Hoard.Infrastructure.Persistence.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hoard.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(HoardDbContext))]
    [Migration("20210514080158_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hoard.Core.Entities.Games.Developer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Nihon Falcom"
                        },
                        new
                        {
                            ID = 2,
                            Name = "CAPCOM"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Good-Feel"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternateTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("MediaTypeID")
                        .HasColumnType("int");

                    b.Property<int>("PlatformID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("MediaTypeID");

                    b.HasIndex("PlatformID");

                    b.HasIndex("Title", "PlatformID", "LanguageID", "MediaTypeID", "ReleaseDate")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AlternateTitle = "英雄伝説 空の軌跡 FC Evolution",
                            LanguageID = 2,
                            MediaTypeID = 1,
                            PlatformID = 7,
                            ReleaseDate = new DateTime(2015, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Heroes: Trails in the Sky FC Evolution"
                        },
                        new
                        {
                            ID = 2,
                            LanguageID = 1,
                            MediaTypeID = 2,
                            PlatformID = 24,
                            ReleaseDate = new DateTime(2018, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Monster Hunter World"
                        },
                        new
                        {
                            ID = 3,
                            LanguageID = 1,
                            MediaTypeID = 1,
                            PlatformID = 13,
                            ReleaseDate = new DateTime(2015, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Yoshi's Woolly World"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Turn-based RPG"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Action RPG"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Platform"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Visual novel"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Hoarder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Hoarders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Meintje"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Bram"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameDeveloper", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "DeveloperID");

                    b.HasIndex("DeveloperID");

                    b.ToTable("GameDevelopers");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            DeveloperID = 1
                        },
                        new
                        {
                            GameID = 2,
                            DeveloperID = 2
                        },
                        new
                        {
                            GameID = 3,
                            DeveloperID = 3
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameGenre", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "GenreID");

                    b.HasIndex("GenreID");

                    b.ToTable("GameGenres");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            GenreID = 1
                        },
                        new
                        {
                            GameID = 1,
                            GenreID = 4
                        },
                        new
                        {
                            GameID = 2,
                            GenreID = 2
                        },
                        new
                        {
                            GameID = 3,
                            GenreID = 3
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameMode", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("ModeID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "ModeID");

                    b.HasIndex("ModeID");

                    b.ToTable("GameModes");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            ModeID = 1
                        },
                        new
                        {
                            GameID = 2,
                            ModeID = 1
                        },
                        new
                        {
                            GameID = 2,
                            ModeID = 2
                        },
                        new
                        {
                            GameID = 3,
                            ModeID = 1
                        },
                        new
                        {
                            GameID = 3,
                            ModeID = 2
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GamePublisher", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("PublisherID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "PublisherID");

                    b.HasIndex("PublisherID");

                    b.ToTable("GamePublishers");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            PublisherID = 1
                        },
                        new
                        {
                            GameID = 2,
                            PublisherID = 2
                        },
                        new
                        {
                            GameID = 3,
                            PublisherID = 3
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameSeries", b =>
                {
                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("SeriesID")
                        .HasColumnType("int");

                    b.HasKey("GameID", "SeriesID");

                    b.HasIndex("SeriesID");

                    b.ToTable("GameSeries");

                    b.HasData(
                        new
                        {
                            GameID = 1,
                            SeriesID = 1
                        },
                        new
                        {
                            GameID = 1,
                            SeriesID = 2
                        },
                        new
                        {
                            GameID = 2,
                            SeriesID = 3
                        },
                        new
                        {
                            GameID = 3,
                            SeriesID = 4
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "English",
                            ShortName = "EN"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Japanese",
                            ShortName = "JP"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.MediaType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MediaTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Physical"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Digital"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Mode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Modes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Single-player"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Cooperative multiplayer"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Competitive multiplayer"
                        },
                        new
                        {
                            ID = 4,
                            Name = "MMO"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.OwnershipStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OrdinalNumber")
                        .IsUnique();

                    b.ToTable("OwnershipStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Owned",
                            OrdinalNumber = 1
                        },
                        new
                        {
                            ID = 2,
                            Name = "Household",
                            OrdinalNumber = 2
                        },
                        new
                        {
                            ID = 3,
                            Name = "Borrowed",
                            OrdinalNumber = 3
                        },
                        new
                        {
                            ID = 4,
                            Name = "Subscription",
                            OrdinalNumber = 4
                        },
                        new
                        {
                            ID = 5,
                            Name = "Formerly owned",
                            OrdinalNumber = 5
                        },
                        new
                        {
                            ID = 6,
                            Name = "Other",
                            OrdinalNumber = 6
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Platform", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Sony Playstation",
                            ShortName = "PSX"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Sony Playstation 2",
                            ShortName = "PS2"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Sony Playstation 3",
                            ShortName = "PS3"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Sony Playstation 4",
                            ShortName = "PS4"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Sony Playstation 5",
                            ShortName = "PS5"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Sony Playstation Portable",
                            ShortName = "PSP"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Sony Playstation Vita",
                            ShortName = "PSVita"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Nintendo Entertainment System",
                            ShortName = "NES"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Super Nintendo Entertainment System",
                            ShortName = "SNES"
                        },
                        new
                        {
                            ID = 10,
                            Name = "Nintendo 64",
                            ShortName = "N64"
                        },
                        new
                        {
                            ID = 11,
                            Name = "Nintendo GameCube",
                            ShortName = "GCN"
                        },
                        new
                        {
                            ID = 12,
                            Name = "Nintendo Wii",
                            ShortName = "Wii"
                        },
                        new
                        {
                            ID = 13,
                            Name = "Nintendo Wii U",
                            ShortName = "Wii U"
                        },
                        new
                        {
                            ID = 14,
                            Name = "Nintendo Switch",
                            ShortName = "Switch"
                        },
                        new
                        {
                            ID = 15,
                            Name = "Nintendo Game Boy",
                            ShortName = "GB"
                        },
                        new
                        {
                            ID = 16,
                            Name = "Nintendo Game Boy Color",
                            ShortName = "GBC"
                        },
                        new
                        {
                            ID = 17,
                            Name = "Nintendo Game Boy Advance",
                            ShortName = "GBA"
                        },
                        new
                        {
                            ID = 18,
                            Name = "Nintendo DS",
                            ShortName = "DS"
                        },
                        new
                        {
                            ID = 19,
                            Name = "Nintendo 3DS",
                            ShortName = "3DS"
                        },
                        new
                        {
                            ID = 20,
                            Name = "Microsoft Xbox",
                            ShortName = "Xbox"
                        },
                        new
                        {
                            ID = 21,
                            Name = "Microsoft Xbox 360",
                            ShortName = "X360"
                        },
                        new
                        {
                            ID = 22,
                            Name = "Microsoft Xbox One",
                            ShortName = "XOne"
                        },
                        new
                        {
                            ID = 23,
                            Name = "Microsoft Xbox Series X|S",
                            ShortName = "XSXS"
                        },
                        new
                        {
                            ID = 24,
                            Name = "Steam",
                            ShortName = "Steam"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.PlayData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AchievementsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Dropped")
                        .HasColumnType("bit");

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<int>("HoarderID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("OwnershipStatusID")
                        .HasColumnType("int");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("HoarderID");

                    b.HasIndex("OwnershipStatusID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("GameID", "HoarderID")
                        .IsUnique();

                    b.ToTable("PlayData");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AchievementsCompleted = true,
                            Dropped = false,
                            GameID = 1,
                            HoarderID = 1,
                            OwnershipStatusID = 1,
                            PriorityID = 1
                        },
                        new
                        {
                            ID = 2,
                            AchievementsCompleted = false,
                            Dropped = true,
                            GameID = 1,
                            HoarderID = 2,
                            OwnershipStatusID = 1,
                            PriorityID = 5
                        },
                        new
                        {
                            ID = 3,
                            AchievementsCompleted = false,
                            Dropped = false,
                            GameID = 2,
                            HoarderID = 1,
                            OwnershipStatusID = 1,
                            PriorityID = 2
                        },
                        new
                        {
                            ID = 4,
                            AchievementsCompleted = false,
                            Dropped = false,
                            GameID = 2,
                            HoarderID = 2,
                            OwnershipStatusID = 1,
                            PriorityID = 2
                        },
                        new
                        {
                            ID = 5,
                            AchievementsCompleted = true,
                            Dropped = false,
                            GameID = 3,
                            HoarderID = 1,
                            OwnershipStatusID = 1,
                            PriorityID = 4
                        },
                        new
                        {
                            ID = 6,
                            AchievementsCompleted = false,
                            Dropped = true,
                            GameID = 3,
                            HoarderID = 2,
                            OwnershipStatusID = 1,
                            PriorityID = 4
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.PlayStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OrdinalNumber")
                        .IsUnique();

                    b.ToTable("PlayStatuses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Playing",
                            OrdinalNumber = 1
                        },
                        new
                        {
                            ID = 2,
                            Name = "Hiatus",
                            OrdinalNumber = 2
                        },
                        new
                        {
                            ID = 3,
                            Name = "Finished",
                            OrdinalNumber = 3
                        },
                        new
                        {
                            ID = 4,
                            Name = "Dropped",
                            OrdinalNumber = 4
                        },
                        new
                        {
                            ID = 5,
                            Name = "Endless",
                            OrdinalNumber = 5
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Playthrough", b =>
                {
                    b.Property<int>("PlayDataID")
                        .HasColumnType("int");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayStatusID")
                        .HasColumnType("int");

                    b.Property<int>("PlaytimeInMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("SideContentCompleted")
                        .HasColumnType("bit");

                    b.HasKey("PlayDataID", "OrdinalNumber");

                    b.HasIndex("PlayStatusID");

                    b.ToTable("Playthroughs");

                    b.HasData(
                        new
                        {
                            PlayDataID = 1,
                            OrdinalNumber = 1,
                            DateEnd = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            DateStart = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            PlayStatusID = 1,
                            PlaytimeInMinutes = 3000,
                            SideContentCompleted = false
                        },
                        new
                        {
                            PlayDataID = 3,
                            OrdinalNumber = 1,
                            PlayStatusID = 3,
                            PlaytimeInMinutes = 30000,
                            SideContentCompleted = false
                        },
                        new
                        {
                            PlayDataID = 4,
                            OrdinalNumber = 1,
                            DateEnd = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            DateStart = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            PlayStatusID = 1,
                            PlaytimeInMinutes = 29000,
                            SideContentCompleted = false
                        },
                        new
                        {
                            PlayDataID = 5,
                            OrdinalNumber = 1,
                            DateEnd = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            DateStart = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            PlayStatusID = 2,
                            PlaytimeInMinutes = 1000,
                            SideContentCompleted = true
                        },
                        new
                        {
                            PlayDataID = 5,
                            OrdinalNumber = 2,
                            DateEnd = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            DateStart = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            PlayStatusID = 1,
                            PlaytimeInMinutes = 500,
                            SideContentCompleted = false
                        },
                        new
                        {
                            PlayDataID = 6,
                            OrdinalNumber = 1,
                            DateEnd = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            DateStart = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            PlayStatusID = 4,
                            PlaytimeInMinutes = 10,
                            SideContentCompleted = false
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Priority", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OrdinalNumber")
                        .IsUnique();

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Highest",
                            OrdinalNumber = 1
                        },
                        new
                        {
                            ID = 2,
                            Name = "High",
                            OrdinalNumber = 2
                        },
                        new
                        {
                            ID = 3,
                            Name = "Neutral",
                            OrdinalNumber = 3
                        },
                        new
                        {
                            ID = 4,
                            Name = "Low",
                            OrdinalNumber = 4
                        },
                        new
                        {
                            ID = 5,
                            Name = "Lowest",
                            OrdinalNumber = 5
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Publisher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Nihon Falcom"
                        },
                        new
                        {
                            ID = 2,
                            Name = "CAPCOM"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Nintendo"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Series", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Trails"
                        },
                        new
                        {
                            ID = 2,
                            Name = "The Legend of Heroes"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Monster Hunter"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Yoshi"
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Wishlist.WishlistItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("date");

                    b.Property<int>("HoarderID")
                        .HasColumnType("int");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("StoreURL")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("WishlistItemTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("HoarderID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("WishlistItemTypeID");

                    b.HasIndex("Title", "HoarderID", "WishlistItemTypeID")
                        .IsUnique();

                    b.ToTable("WishlistItems");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AddDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            HoarderID = 1,
                            LanguageID = 1,
                            Notes = "Maybe wait for PS7 version?",
                            PriorityID = 1,
                            ReleaseDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            StoreURL = "https://www.budgetgaming.nl/",
                            Title = "Persona 6 Royal",
                            WishlistItemTypeID = 1
                        },
                        new
                        {
                            ID = 2,
                            AddDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            HoarderID = 1,
                            LanguageID = 2,
                            Notes = "Check out other works by this artist, too.",
                            PriorityID = 2,
                            ReleaseDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            StoreURL = "https://www.amazon.co.jp/",
                            Title = "Oresama Teacher",
                            WishlistItemTypeID = 2
                        },
                        new
                        {
                            ID = 3,
                            AddDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            HoarderID = 1,
                            LanguageID = 2,
                            Notes = "Hide this from Bram.",
                            PriorityID = 3,
                            ReleaseDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            StoreURL = "https://www.amazon.co.jp/",
                            Title = "Monstergirl Factory",
                            WishlistItemTypeID = 5
                        },
                        new
                        {
                            ID = 4,
                            AddDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            HoarderID = 1,
                            LanguageID = 2,
                            Notes = "Get Limited Edition!",
                            PriorityID = 1,
                            ReleaseDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            StoreURL = "https://www.amazon.co.jp/",
                            Title = "Eiyuu Densetsu: Zero no Kiseki",
                            WishlistItemTypeID = 1
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Wishlist.WishlistItemType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OrdinalNumber")
                        .IsUnique();

                    b.ToTable("WishlistItemTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Game",
                            OrdinalNumber = 1
                        },
                        new
                        {
                            ID = 2,
                            Name = "Manga",
                            OrdinalNumber = 2
                        },
                        new
                        {
                            ID = 3,
                            Name = "DVD/Bluray",
                            OrdinalNumber = 3
                        },
                        new
                        {
                            ID = 4,
                            Name = "Book",
                            OrdinalNumber = 4
                        },
                        new
                        {
                            ID = 5,
                            Name = "Artbook",
                            OrdinalNumber = 5
                        },
                        new
                        {
                            ID = 6,
                            Name = "CD",
                            OrdinalNumber = 6
                        });
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Game", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.MediaType", "MediaType")
                        .WithMany()
                        .HasForeignKey("MediaTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("MediaType");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameDeveloper", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("Developers")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameGenre", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("Genres")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameMode", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("Modes")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Mode", "Mode")
                        .WithMany()
                        .HasForeignKey("ModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Mode");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GamePublisher", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("Publishers")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.JoinEntities.GameSeries", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("Series")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.PlayData", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Game", "Game")
                        .WithMany("PlayData")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Hoarder", "Hoarder")
                        .WithMany("GameProgress")
                        .HasForeignKey("HoarderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.OwnershipStatus", "OwnershipStatus")
                        .WithMany()
                        .HasForeignKey("OwnershipStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Hoarder");

                    b.Navigation("OwnershipStatus");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Playthrough", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.PlayData", "PlayData")
                        .WithMany("Playthroughs")
                        .HasForeignKey("PlayDataID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.PlayStatus", "PlayStatus")
                        .WithMany()
                        .HasForeignKey("PlayStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayData");

                    b.Navigation("PlayStatus");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Wishlist.WishlistItem", b =>
                {
                    b.HasOne("Hoard.Core.Entities.Games.Hoarder", "Hoarder")
                        .WithMany()
                        .HasForeignKey("HoarderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Games.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoard.Core.Entities.Wishlist.WishlistItemType", "WishlistItemType")
                        .WithMany()
                        .HasForeignKey("WishlistItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hoarder");

                    b.Navigation("Language");

                    b.Navigation("Priority");

                    b.Navigation("WishlistItemType");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Game", b =>
                {
                    b.Navigation("Developers");

                    b.Navigation("Genres");

                    b.Navigation("Modes");

                    b.Navigation("PlayData");

                    b.Navigation("Publishers");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.Hoarder", b =>
                {
                    b.Navigation("GameProgress");
                });

            modelBuilder.Entity("Hoard.Core.Entities.Games.PlayData", b =>
                {
                    b.Navigation("Playthroughs");
                });
#pragma warning restore 612, 618
        }
    }
}
